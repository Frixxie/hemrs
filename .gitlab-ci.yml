# You can copy and paste this template into a new `.gitlab-ci.yml` file.
build-backend:
  stage: build
  image: "rust:latest"

  services:
     - postgres:latest
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo build --workspace --verbose

  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: admin
    POSTGRES_HOST_AUTH_METHOD: trust

build-frontend:
  stage: build
  image: "node:latest"
  script:
    - cd frontend && npm i && npm run build

test-backend:
  stage: test
  image: "rust:latest"

  services:
     - postgres:latest
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo test --workspace --verbose

  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: admin
    POSTGRES_HOST_AUTH_METHOD: trust

deploy-backend:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  rules:
    - if: $CI_COMMIT_TAG

deploy-frontend:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/frontend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}_frontend:${CI_COMMIT_TAG}"
  rules:
    - if: $CI_COMMIT_TAG

changelog:
  image:
    name: orhunp/git-cliff:latest
    entrypoint: [""]
  variables:
    GIT_STRATEGY: clone # clone entire repo instead of reusing workspace
    GIT_DEPTH: 0 # avoid shallow clone to give cliff all the info it needs
  stage: deploy
  script:
    - git-cliff -r . > CHANGELOG.md
  artifacts:
    paths:
      - CHANGELOG.md
  rules:
    - if: $CI_COMMIT_TAG
